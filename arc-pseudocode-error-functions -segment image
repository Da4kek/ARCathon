import json

def load_json_file(file_path):
    with open(file_path, 'r') as json_file:
        data = json.load(json_file)
    return data

def segment_json_images(file_a, file_b):
    image_a = load_json_file(file_a)
    image_b = load_json_file(file_b)

    def get_color(x, y, image):
        return image[y][x]

    def find_neighbors(x, y, image, width, height):
        neighbors = []
        if x > 0:
            neighbors.append((x - 1, y))
        if x < width - 1:
            neighbors.append((x + 1, y))
        if y > 0:
            neighbors.append((x, y - 1))
        if y < height - 1:
            neighbors.append((x, y + 1))
        return neighbors

    def dfs(x, y, image, segment, visited, color, width, height):
        if (x, y) in visited:
            return
        visited.add((x, y))
        current_color = get_color(x, y, image)
        if current_color != color:
            return
        segment.append((x, y))
        neighbors = find_neighbors(x, y, image, width, height)
        for nx, ny in neighbors:
            dfs(nx, ny, image, segment, visited, color, width, height)

    def find_segments(image):
        width = len(image[0])
        height = len(image)
        segments = []
        visited = set()

        for y in range(height):
            for x in range(width):
                if (x, y) not in visited:
                    color = get_color(x, y, image)
                    segment = []
                    dfs(x, y, image, segment, visited, color, width, height)
                    segments.append(segment)
        return segments

    segments_a = find_segments(image_a)
    segments_b = find_segments(image_b)

    return segments_a, segments_b

# Example usage:
file_a = 'image_a.json'
file_b = 'image_b.json'
segments_a, segments_b = segment_json_images(file_a, file_b)

print("Segments for image A:")
for segment in segments_a:
    print(segment)

print("Segments for image B:")
for segment in segments_b:
    print(segment)











